@model SearchWebUi.Models.SearchVM
@using SearchWebUi.Models


@*search area*@

<div class="container">
    @using (Html.BeginForm("index", "home", FormMethod.Get, new { @class = "", @id = "searchForm" }))
    {
        <div class="row searchRow">
            <div class="col-md-12">

                <div class="input-group stylish-input-group">
                    @Html.TextBoxFor(m => m.EhsQuery.QueryText, new { @class = "form-control" })

                    <span class="input-group-addon">
                        <button type="submit">
                            <span class="glyphicon glyphicon-search"></span>
                        </button>
                    </span>
                </div>
            </div>
        </div>



        <br />
        <div class="row">
            <div class="col-md-12 col-md-offset-1">
                <ul id="searchStats" class="list-inline">
                    <li>Search Query: <em>@Model.QueryResponse.QueryText.QueryText</em></li>
                    <li>Query Time: <em>@Model.QueryResponse.QueryTime</em><small> ms</small></li>
                    <li>Result Count: <em>@Model.QueryResponse.TotalHits</em></li>
                </ul>
            </div>
        </div>


        <hr id="headerBar" />



        <div class="row">
            <div id="filters" class="col-md-4">
                <div id="documentTypeFacet" class="parentFilter">
                  @*  @Html.CheckBox(" ", new { @id = "parentDocBox", @class = "parentBox" })*@

                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <a data-toggle="collapse" data-target="#collapseOne">
                                <h3 class="panel-title">
                                    Document Type
                                </h3>
                            </a>
                        </div>
                        <div id="collapseOne" class="panel-collapse collapse in">
                            <div class="panel-body">
                                @for (int i = 0; i < Model.filters.Count(); i++)
                                {
                                    if (@Model.filters[i].Type == FilterType.Document)
                                    {
                                        <div class="Fieldset">
                                            @Html.CheckBoxFor(m => m.filters[i].Selected, new { @class = "childDocBox" })
                                            @Html.HiddenFor(m => m.filters[i].FilterName)
                                            @Html.HiddenFor(m => m.filters[i].Type)
                                            @Html.DisplayTextFor(m => m.filters[i].FilterName)
                                            <span>(@Model.QueryResponse.DocumentTypeFacet.Single(facet => facet.Key == Model.filters[i].FilterName).Value)</span>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div id="statusFacet" class="parentFilter">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <a data-toggle="collapse" data-target="#collapseTwo">
                                <h3 class="panel-title">
                                    @*      @Html.CheckBox(" ", new { @class = "parentBox" })*@
                                    Status
                                </h3>
                            </a>
                        </div>
                        <div id="collapseTwo" class="panel-collapse collapse in">
                            <div class="panel-body">
                                @for (int i = 0; i < Model.filters.Count(); i++)
                                {
                                    if (Model.filters[i].Type == FilterType.Status)
                                    {
                                        <div class="Fieldset">
                                            @Html.CheckBoxFor(m => m.filters[i].Selected)
                                            @Html.HiddenFor(m => m.filters[i].FilterName)
                                            @Html.HiddenFor(m => m.filters[i].Type)
                                            @Html.Label(Model.filters[i].FilterName)
                                            <span>(@Model.QueryResponse.StatusTypeFacet.Single(facet => facet.Key == Model.filters[i].FilterName).Value)</span>
                                        </div>
                                    }
                                }

                            </div>
                        </div>
                    </div>
                </div>

                <div id="dateFacet" class="parentFilter">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            @*    @Html.CheckBox(" ", new { @class = "parentBox" })*@
                            <a data-toggle="collapse" data-target="#collapseThree">
                                <h3 class="panel-title">
                                    Dates
                                </h3>
                            </a>

                        </div>
                        <div id="collapseThree" class="panel-collapse collapse in">
                            <div class="panel-body">
                                @for (int i = 0; i < Model.filters.Count(); i++)
                                {
                                    if (Model.filters[i].Type == FilterType.Date)
                                    {
                                        <div class="Fieldset">
                                            @Html.CheckBoxFor(m => m.filters[i].Selected)
                                            @Html.HiddenFor(m => m.filters[i].FilterName)
                                            @Html.HiddenFor(m => m.filters[i].Type)
                                            @Html.Label(Model.filters[i].FilterName)
                                            <span>(@Model.QueryResponse.DateCreatedFacet.SingleOrDefault(facet => facet.Key == Model.filters[i].FilterName).Value)</span>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div id="orgLocationFacet" class="parentFilter">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <a data-toggle="collapse" data-target="#collapseFour">
                                <h3 class="panel-title">
                                    @*           @Html.CheckBox(" ", new { @class = "parentBox" })*@
                                    Org Path
                                </h3>
                            </a>
                        </div>
                        <div id="collapseFour" class="panel-collapse collapse">
                            <div class="panel-body">
                                @for (int i = 0; i < Model.filters.Count(); i++)
                                {
                                    if (Model.filters[i].Type == FilterType.OrgLocation)
                                    {
                                        <div class="Fieldset">
                                            @Html.CheckBoxFor(m => m.filters[i].Selected, new { @class = "checkBox" })
                                            @Html.HiddenFor(m => m.filters[i].FilterName)
                                            @Html.HiddenFor(m => m.filters[i].Type)
                                            @Html.Label(Model.filters[i].FilterName)
                                            <span>(@Model.QueryResponse.OrgLocationFacet.Single(facet => facet.Key == Model.filters[i].FilterName).Value)</span>
                                        </div>
                                    }
                                }

                            </div>
                        </div>
                    </div>
                </div>

            </div>


            <div id="results" class="col-md-8">
                <div class="row">
                    <div class="col-md-12">
                        @if (Model != null)
                        {
                            @Html.Partial("_search", Model.QueryResponse.Results)
                        }
                    </div>
                </div>
            </div>
        </div>
    }

</div>

@section Scripts
{
    <script src="@Url.Content("~/Scripts/search.js")"></script></script>
}


